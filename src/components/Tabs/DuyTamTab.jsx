// tabs/DuyTamTab.jsx
import React, { useState, useEffect } from "react";
import {
  Brain,
  Volume2,
  Pause,
  ChevronRight,
  Sparkles,
  Cloud,
  Eye,
  Zap,
  Star,
  Heart,
  Moon,
  Sun,
} from "lucide-react";

const DuyTamTab = ({ audioState }) => {
  const [, setCurrentImageIndex] = useState(0);

  const philosophyImages = [
    {
      icon: "üß†",
      title: "T√¢m tr√≠",
      description: "√ù th·ª©c l√† ngu·ªìn g·ªëc c·ªßa v·∫°n v·∫≠t",
      color: "from-purple-400 to-pink-400",
    },
    {
      icon: "üí≠",
      title: "T∆∞ duy",
      description: "Th·∫ø gi·ªõi v·∫≠t ch·∫•t l√† s·∫£n ph·∫©m c·ªßa tinh th·∫ßn",
      color: "from-blue-400 to-purple-400",
    },
    {
      icon: "‚ú®",
      title: "Tinh th·∫ßn",
      description: "√ù th·ª©c quy·∫øt ƒë·ªãnh t·ªìn t·∫°i",
      color: "from-pink-400 to-yellow-400",
    },
    {
      icon: "üåå",
      title: "V≈© tr·ª• quan",
      description: "V·∫°n v·∫≠t ƒë·ªÅu xu·∫•t ph√°t t·ª´ √Ω ni·ªám",
      color: "from-indigo-400 to-purple-400",
    },
    {
      icon: "üé≠",
      title: "Hi·ªán t∆∞·ª£ng",
      description: "V·∫≠t ch·∫•t ch·ªâ l√† bi·ªÉu hi·ªán c·ªßa tinh th·∫ßn",
      color: "from-purple-400 to-red-400",
    },
  ];

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentImageIndex((prev) => (prev + 1) % philosophyImages.length);
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  const handleSpeak = () => {
    if (window.handleSpeakTab) {
      const content = `CH·ª¶NG NGHƒ®A DUY T√ÇM

Quan ƒëi·ªÉm c∆° b·∫£n:
‚Ä¢ √ù th·ª©c l√† t·ªìn t·∫°i duy nh·∫•t, tuy·ªát ƒë·ªëi, c√≥ t√≠nh quy·∫øt ƒë·ªãnh
‚Ä¢ Th·∫ø gi·ªõi v·∫≠t ch·∫•t ch·ªâ l√† b·∫£n sao, bi·ªÉu hi·ªán kh√°c c·ªßa √Ω th·ª©c tinh th·∫ßn
‚Ä¢ V·∫≠t ch·∫•t l√† t√≠nh th·ª© hai, do √Ω th·ª©c tinh th·∫ßn sinh ra

ƒê·∫∑c ƒëi·ªÉm:
‚Ä¢ Ph·ªß nh·∫≠n t√≠nh kh√°ch quan c·ªßa th·∫ø gi·ªõi v·∫≠t ch·∫•t
‚Ä¢ C∆∞·ªùng ƒëi·ªáu vai tr√≤ nh√¢n t·ªë ch·ªß quan
‚Ä¢ Duy √Ω ch√≠ trong h√†nh ƒë·ªông
‚Ä¢ B·∫•t ch·∫•p ƒëi·ªÅu ki·ªán v√† quy lu·∫≠t kh√°ch quan

H·ªá qu·∫£:
‚Ä¢ D·∫´n ƒë·∫øn ch·ªß nghƒ©a duy √Ω ch√≠ trong nh·∫≠n th·ª©c
‚Ä¢ T√°ch r·ªùi th·ª±c ti·ªÖn kh√°ch quan
‚Ä¢ Kh√¥ng ph·∫£n √°nh ƒë√∫ng b·∫£n ch·∫•t c·ªßa th·∫ø gi·ªõi`;

      window.handleSpeakTab(content, 0);
    }
  };

  return (
    <div className="animate-fadeIn">
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <div className="floating-icon absolute top-10 left-10 text-purple-200 opacity-30">
          <Brain className="w-8 h-8" />
        </div>
        <div className="floating-icon-reverse absolute top-20 right-20 text-purple-200 opacity-30">
          <Cloud className="w-10 h-10" />
        </div>
        <div className="floating-icon absolute bottom-20 left-20 text-purple-200 opacity-30">
          <Star className="w-6 h-6" />
        </div>
        <div className="floating-icon-reverse absolute bottom-10 right-10 text-purple-200 opacity-30">
          <Sparkles className="w-8 h-8" />
        </div>
      </div>

      <div className="mb-6 relative h-40 bg-gradient-to-r from-purple-100 to-pink-100 rounded-2xl overflow-hidden">
        <div className="absolute inset-0 flex items-center justify-center">
          <div className="flex gap-8 animate-slide">
            {[...philosophyImages, ...philosophyImages].map((img, index) => (
              <div
                key={index}
                className={`flex-shrink-0 w-32 h-32 bg-gradient-to-br ${img.color} rounded-2xl flex flex-col items-center justify-center transform hover:scale-110 transition-transform cursor-pointer shadow-lg`}
              >
                <div className="text-4xl mb-2 animate-bounce-slow">
                  {img.icon}
                </div>
                <p className="text-white text-sm font-bold">{img.title}</p>
                <p className="text-white/80 text-xs px-2 text-center">
                  {img.description}
                </p>
              </div>
            ))}
          </div>
        </div>

        <div className="absolute left-0 top-0 bottom-0 w-20 bg-gradient-to-r from-purple-100 to-transparent pointer-events-none" />
        <div className="absolute right-0 top-0 bottom-0 w-20 bg-gradient-to-l from-pink-100 to-transparent pointer-events-none" />
      </div>

      <div className="flex items-center justify-between mb-6 relative z-10">
        <div className="flex items-center gap-3">
          <div className="w-12 h-12 bg-gradient-to-br from-purple-500 to-purple-700 rounded-xl flex items-center justify-center animate-pulse-slow">
            <Brain className="w-7 h-7 text-white" />
          </div>
          <h2 className="text-2xl md:text-3xl font-bold bg-gradient-to-r from-purple-500 to-purple-700 bg-clip-text text-transparent">
            Ch·ªß nghƒ©a duy t√¢m
          </h2>
        </div>

        <button
          onClick={handleSpeak}
          disabled={
            audioState.isLoading ||
            (audioState.currentPlayingTab !== null &&
              audioState.currentPlayingTab !== 0)
          }
          className={`
            flex items-center gap-2 px-4 py-2 rounded-xl font-medium transition-all
            ${
              audioState.currentPlayingTab === 0
                ? "bg-gradient-to-r from-yellow-400 to-orange-500 text-white animate-pulse"
                : audioState.currentPlayingTab !== null
                ? "bg-gray-200 text-gray-400 cursor-not-allowed"
                : "bg-gradient-to-r from-purple-500 to-purple-600 text-white hover:shadow-lg hover:scale-105"
            }
            disabled:opacity-50 disabled:cursor-not-allowed
          `}
        >
          {audioState.isLoading && audioState.currentPlayingTab === 0 ? (
            <>
              <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
              ƒêang t·∫£i
            </>
          ) : audioState.currentPlayingTab === 0 ? (
            <>
              <Pause className="w-4 h-4" />
              ƒêang ph√°t
            </>
          ) : (
            <>
              <Volume2 className="w-4 h-4" />
              Ph√°t √¢m
            </>
          )}
        </button>
      </div>

      <div className="bg-purple-50 rounded-xl p-6 mb-6 relative">
        <div className="prose max-w-none">
          <h4 className="text-lg font-semibold text-purple-700 mt-4 mb-2 flex items-center gap-2">
            <Eye className="w-5 h-5" />
            Quan ƒëi·ªÉm c∆° b·∫£n:
          </h4>
          <div className="flex items-start gap-2 ml-4 mb-2 hover:translate-x-2 transition-transform">
            <ChevronRight className="w-4 h-4 text-purple-500 mt-0.5 flex-shrink-0 animate-pulse" />
            <span className="text-gray-700">
              √ù th·ª©c l√† t·ªìn t·∫°i duy nh·∫•t, tuy·ªát ƒë·ªëi, c√≥ t√≠nh quy·∫øt ƒë·ªãnh
            </span>
          </div>
          <div className="flex items-start gap-2 ml-4 mb-2 hover:translate-x-2 transition-transform">
            <ChevronRight className="w-4 h-4 text-purple-500 mt-0.5 flex-shrink-0 animate-pulse" />
            <span className="text-gray-700">
              Th·∫ø gi·ªõi v·∫≠t ch·∫•t ch·ªâ l√† b·∫£n sao, bi·ªÉu hi·ªán kh√°c c·ªßa √Ω th·ª©c tinh
              th·∫ßn
            </span>
          </div>
          <div className="flex items-start gap-2 ml-4 mb-2 hover:translate-x-2 transition-transform">
            <ChevronRight className="w-4 h-4 text-purple-500 mt-0.5 flex-shrink-0 animate-pulse" />
            <span className="text-gray-700">
              V·∫≠t ch·∫•t l√† t√≠nh th·ª© hai, do √Ω th·ª©c tinh th·∫ßn sinh ra
            </span>
          </div>

          <h4 className="text-lg font-semibold text-purple-700 mt-4 mb-2 flex items-center gap-2">
            <Zap className="w-5 h-5" />
            ƒê·∫∑c ƒëi·ªÉm:
          </h4>
          <div className="flex items-start gap-2 ml-4 mb-2 hover:translate-x-2 transition-transform">
            <ChevronRight className="w-4 h-4 text-purple-500 mt-0.5 flex-shrink-0 animate-pulse" />
            <span className="text-gray-700">
              Ph·ªß nh·∫≠n t√≠nh kh√°ch quan c·ªßa th·∫ø gi·ªõi v·∫≠t ch·∫•t
            </span>
          </div>
          <div className="flex items-start gap-2 ml-4 mb-2 hover:translate-x-2 transition-transform">
            <ChevronRight className="w-4 h-4 text-purple-500 mt-0.5 flex-shrink-0 animate-pulse" />
            <span className="text-gray-700">
              C∆∞·ªùng ƒëi·ªáu vai tr√≤ nh√¢n t·ªë ch·ªß quan
            </span>
          </div>
          <div className="flex items-start gap-2 ml-4 mb-2 hover:translate-x-2 transition-transform">
            <ChevronRight className="w-4 h-4 text-purple-500 mt-0.5 flex-shrink-0 animate-pulse" />
            <span className="text-gray-700">Duy √Ω ch√≠ trong h√†nh ƒë·ªông</span>
          </div>
          <div className="flex items-start gap-2 ml-4 mb-2 hover:translate-x-2 transition-transform">
            <ChevronRight className="w-4 h-4 text-purple-500 mt-0.5 flex-shrink-0 animate-pulse" />
            <span className="text-gray-700">
              B·∫•t ch·∫•p ƒëi·ªÅu ki·ªán v√† quy lu·∫≠t kh√°ch quan
            </span>
          </div>

          <h4 className="text-lg font-semibold text-purple-700 mt-4 mb-2 flex items-center gap-2">
            <Star className="w-5 h-5" />
            H·ªá qu·∫£:
          </h4>
          <div className="flex items-start gap-2 ml-4 mb-2 hover:translate-x-2 transition-transform">
            <ChevronRight className="w-4 h-4 text-purple-500 mt-0.5 flex-shrink-0 animate-pulse" />
            <span className="text-gray-700">
              D·∫´n ƒë·∫øn ch·ªß nghƒ©a duy √Ω ch√≠ trong nh·∫≠n th·ª©c
            </span>
          </div>
          <div className="flex items-start gap-2 ml-4 mb-2 hover:translate-x-2 transition-transform">
            <ChevronRight className="w-4 h-4 text-purple-500 mt-0.5 flex-shrink-0 animate-pulse" />
            <span className="text-gray-700">T√°ch r·ªùi th·ª±c ti·ªÖn kh√°ch quan</span>
          </div>
          <div className="flex items-start gap-2 ml-4 mb-2 hover:translate-x-2 transition-transform">
            <ChevronRight className="w-4 h-4 text-purple-500 mt-0.5 flex-shrink-0 animate-pulse" />
            <span className="text-gray-700">
              Kh√¥ng ph·∫£n √°nh ƒë√∫ng b·∫£n ch·∫•t c·ªßa th·∫ø gi·ªõi
            </span>
          </div>
        </div>
      </div>

      <div className="mb-6">
        <h4 className="text-lg font-bold text-gray-800 mb-4 flex items-center gap-2">
          <Sparkles className="w-5 h-5 text-purple-500" />
          V√≠ d·ª• minh h·ªça c√°c quan ƒëi·ªÉm
        </h4>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          {[
            {
              icon: Sun,
              title: "Platon",
              desc: "V√≠ d·ª•: Khi nh√¨n th·∫•y m·ªôt c√°i b√†n g·ªó, b√†n s·∫Øt hay b√†n nh·ª±a, ƒë√≥ ch·ªâ l√† b·∫£n sao kh√¥ng ho√†n h·∫£o c·ªßa '√Ω ni·ªám C√°i B√†n' t·ªìn t·∫°i ·ªü th·∫ø gi·ªõi √Ω ni·ªám.",
              color: "yellow",
            },
            {
              icon: Moon,
              title: "Berkeley",
              desc: "V√≠ d·ª•: M·ªôt c√°i c√¢y trong r·ª´ng n·∫øu kh√¥ng ai nh√¨n th·∫•y th√¨ v·∫´n t·ªìn t·∫°i v√¨ Th∆∞·ª£ng ƒë·∫ø lu√¥n tri gi√°c n√≥. T·ªìn t·∫°i l√† ƒë∆∞·ª£c tri gi√°c.",
              color: "blue",
            },
            {
              icon: Heart,
              title: "Hegel",
              desc: "V√≠ d·ª•: C√°c cu·ªôc c√°ch m·∫°ng, s·ª± ph√°t tri·ªÉn khoa h·ªçc v√† vƒÉn h√≥a ch·ªâ l√† bi·ªÉu hi·ªán c·ªßa qu√° tr√¨nh √ù ni·ªám tuy·ªát ƒë·ªëi t·ª± b·ªôc l·ªô trong l·ªãch s·ª≠.",
              color: "red",
            },
          ].map((item, idx) => (
            <div
              key={idx}
              className={`bg-gradient-to-br from-${item.color}-50 to-white p-4 rounded-xl shadow-md hover:shadow-xl transition-all hover:-translate-y-1 cursor-pointer group`}
            >
              <div
                className={`w-10 h-10 bg-${item.color}-100 rounded-lg flex items-center justify-center mb-3 group-hover:scale-110 transition-transform`}
              >
                <item.icon className={`w-6 h-6 text-${item.color}-600`} />
              </div>
              <h5 className="font-bold text-gray-800">{item.title}</h5>
              <p className="text-sm text-gray-600 mt-1">{item.desc}</p>
            </div>
          ))}
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mt-6">
        <div className="bg-white rounded-xl p-4 shadow-md hover:shadow-lg transition-all hover:scale-105 hover:-rotate-1">
          <h5 className="font-semibold text-purple-700 mb-2">
            üí≠ Quan ƒëi·ªÉm c·ªët l√µi
          </h5>
          <p className="text-sm text-gray-600">
            √ù th·ª©c l√† t·ªìn t·∫°i duy nh·∫•t v√† quy·∫øt ƒë·ªãnh
          </p>
        </div>
        <div className="bg-white rounded-xl p-4 shadow-md hover:shadow-lg transition-all hover:scale-105">
          <h5 className="font-semibold text-purple-700 mb-2">‚ö†Ô∏è H·∫°n ch·∫ø</h5>
          <p className="text-sm text-gray-600">
            Ph·ªß nh·∫≠n t√≠nh kh√°ch quan c·ªßa v·∫≠t ch·∫•t
          </p>
        </div>
        <div className="bg-white rounded-xl p-4 shadow-md hover:shadow-lg transition-all hover:scale-105 hover:rotate-1">
          <h5 className="font-semibold text-purple-700 mb-2">üìå H·ªá qu·∫£</h5>
          <p className="text-sm text-gray-600">
            D·∫´n ƒë·∫øn duy √Ω ch√≠, t√°ch r·ªùi th·ª±c ti·ªÖn
          </p>
        </div>
      </div>

      <style jsx>{`
        @keyframes slide {
          0% {
            transform: translateX(0);
          }
          100% {
            transform: translateX(-50%);
          }
        }

        @keyframes blob {
          0% {
            transform: translate(0px, 0px) scale(1);
          }
          33% {
            transform: translate(30px, -50px) scale(1.1);
          }
          66% {
            transform: translate(-20px, 20px) scale(0.9);
          }
          100% {
            transform: translate(0px, 0px) scale(1);
          }
        }

        @keyframes bounce-slow {
          0%,
          100% {
            transform: translateY(0);
          }
          50% {
            transform: translateY(-10px);
          }
        }

        @keyframes spin-slow {
          from {
            transform: rotate(0deg);
          }
          to {
            transform: rotate(360deg);
          }
        }

        @keyframes pulse-slow {
          0%,
          100% {
            opacity: 1;
          }
          50% {
            opacity: 0.7;
          }
        }

        @keyframes floating {
          0% {
            transform: translateY(0px) rotate(0deg);
          }
          50% {
            transform: translateY(-20px) rotate(180deg);
          }
          100% {
            transform: translateY(0px) rotate(360deg);
          }
        }

        @keyframes floating-reverse {
          0% {
            transform: translateY(0px) rotate(360deg);
          }
          50% {
            transform: translateY(-20px) rotate(180deg);
          }
          100% {
            transform: translateY(0px) rotate(0deg);
          }
        }

        .animate-slide {
          animation: slide 20s linear infinite;
        }

        .animate-blob {
          animation: blob 7s infinite;
        }

        .animate-bounce-slow {
          animation: bounce-slow 2s ease-in-out infinite;
        }

        .animate-spin-slow {
          animation: spin-slow 8s linear infinite;
        }

        .animate-pulse-slow {
          animation: pulse-slow 2s ease-in-out infinite;
        }

        .floating-icon {
          animation: floating 6s ease-in-out infinite;
        }

        .floating-icon-reverse {
          animation: floating-reverse 6s ease-in-out infinite;
        }

        .animation-delay-2000 {
          animation-delay: 2s;
        }
      `}</style>
    </div>
  );
};

export default DuyTamTab;
